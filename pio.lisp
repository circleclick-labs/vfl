(declaim (ftype (function (t t) t) readd))
(declaim (ftype (function (t)   t) peekn))
(declaim (ftype (function (t)   t) peeks))
(declaim (ftype (function (t)   t) peekc))
(declaim (ftype (function (t)   t) readc))
(declaim (ftype (function (t)   t) peekw))
(defvar rt      *readtable*)
(defvar ct (copy-readtable))
(defun readr (s)   (let* ((r  (readp s)))
		     (if (!=  (peekc s) #\( )         r  
			 (n   (readc s)           (^. r (readd s #\)))))))
(defun readx (s) (if     (== *readtable*  ct) (^)
		     (if (==  (peekw s) #\lf) (^) (^.   (readr s) (readx s)))))
(defun readw (s)     (if (!=  (peekc s) #\sp) (^) (^.   (readc s) (readw s))))
(defun reads (s)     (if (!=  (peekw s) #\lf) (^) (^.   (readc s) (reads s))))
(defun readd (s c)   (if (!=  (peeks s)    c)     (^.   (readr s) (readd s c))
			 (n   (readc s)       (^))))
(defun readm (s x)   (if (!=  (peekn s)    x) (^)
			 (let ((r (readx s))) (if     r
						  (^. r (readm s x))))))
(defun peekw (s)                                        (readw s) (peekc s))
(defun peeks (s)                                        (reads s) (peekc s))
(defun peekn (s)                                        (reads s) (off   s))
(defun readl (s) (hc (let* ((o n) (r (readx s)))
		       (if r (f. "~a:~a:I: ~s" (shortname) o       r  ))
		       (if r (f. "~a:~a:O: ~s" (shortname) o (eval r))))
		     (end-of-file() (f. ""))))
(defun    cb (s c) (:= *readtable* rt) (unread-char c s) (readl s))
(defun  grab (s)
  (if (peekc s) (set-macro-character (peekc s) 'cb (:= *readtable* ct))))
(defun readb (s c)
  (declare (ignore c))
  (prog1 (readm s (peekn s)) (if (zerop (off s)) (grab s))))
(defun read2 (s c)
  (let* ((r (readb s c)))
    (case (length r)
      ((0 1) (car r))
      (t     (cons (q n) r)))))
(defun readn (s c) (^- (snl s c 1) (grab s)))
(defun readq (s c) (declare (ignore c)) (list (q q) (readr s)))
(defun readh (s c) (declare (ignore c)) (read-line s) (unread-char #\lf s) (^))
(defun readf (f)
  (let* ((s (open (cs f ".lisp"))) (c (peekc s)))
    (n (if c (if (get-macro-character c) () (grab s))) (load s))))
(defun install-vfl ()
  (set-macro-character #\lf 'readn)
  (set-macro-character #\\  'readq)
  (set-macro-character #\/  'readb)
  (set-macro-character #\:  'read2)
  (set-macro-character #\;  'readh))
(defun launch-vfl (filename) (install-vfl) (readf filename) (quit))
